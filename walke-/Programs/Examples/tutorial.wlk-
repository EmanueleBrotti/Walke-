- welcome to Walke-, the worst programming language ever!
- as you can see, you can add a comment by adding "-" before the text
- remember, only 1 instruction per line! This language is not CaSe SeNsItIvE

- walke- uses 6 hex color codes (#FFFFFF) as bool variables:
TRUE = #fffff1  - for example, this instruction sets "#000000" as true
FALSE = #fffff2  - same as true but for the opposite, pseudoinstruction
TRUE = !#fffff3  - adding "!" or "~" before a color uses the opposite, this means #fffff3 will be false

- other utility instructions:
CLOCK = #fffff4  - creates a pulse after ~4 seconds. Doesn't change if you use a color or it's opposite
BUTTON = #fffff5  - creates a button that changes state when pressed, reverts when released. Doesn't change if you use a color or it's opposite
SWITCH = #fffff5  - creates a switch that changes state when interacted with. Doesn't change if you use a color or it's opposite
OUTPUT = #fffff5  - shows the state of the color, or it's opposite if specified
PIXEL = #fffff5, #fffff6, #fffff7   - shows a grid of colors, looks better with multiple outputs!

- logic instructions (you can use opposites of the inputs / outputs to change behaviour)
- the structure is input1 INSTRUCTION input2 = outputs (separated by a comma)
#ff000A AND #00ff0A = #fffffA  - logic and, using the opposite of the output (~#fffffA) turns it into a nand
#ff000B OR #00ff0B = #fffffB  - logic or, using the opposite of the output turns it into a nor
#ff000C XOR #00ff0C = #fffffC  - logic xor, using the opposite of the output turns it into a xnor
#ff000D EQUIV #00ff0D = #fffffD  - logic xnor, pseudoinstruction
#ff000E IMPLIES #00ff0E = #fffffE  - material implication, same as !#ff000E OR #00ff0E = #fffffE, pseudoinstruction

- flags change the behaviour of the gates, after you activate a flag the next instructions will be changed
> OPTIMIZED -optimized saves memory by not spawning extra entities like output blocks or input switches. It makes the gate a bit difficult to read tho!
> STOP -stop adds a "pause button" triggered by the color #FFFFFF to the gate, letting the user interrupt the code
BUTTON = #ffffff
#ff000F AND #00ff0f = #ffffef
> NOPTIMIZED -turns optimized off
> NSTOP -turns stop off

- misc:
#fffff4  AnD   !#F0F00D = #F0F00F, !#0F0F1A  - you can link prevs. outputs (#fffff4, be careful of contraddictions!), add spaces, use lowercase letters 
- and/or add multiple outputs separated by a ","
- ^^^ this is true for all instructions, some ignore opposites
- now try to compile this file, dragging it into the walke-/Programs folder!
